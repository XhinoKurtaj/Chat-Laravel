{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "Laravel Chat",
    "version" : "1.0.0"
  },
  "externalDocs" : {
    "description" : "Find out more about Swagger",
    "url" : "http://swagger.io"
  },
  "servers" : [ {
    "url" : "https://virtserver.swaggerhub.com/Xhino/Chat2-api/1.0.0",
    "description" : "SwaggerHub API Auto Mocking"
  }, {
    "url" : "https://laravel-chat.test/api",
    "description" : "Laravel chat project"
  } ],
  "paths" : {
    "/register" : {
      "post" : {
        "tags" : [ "user" ],
        "summary" : "Register a new User",
        "operationId" : "addUser",
        "parameters": {},
        "requestBody" : {
          "$ref" : "#/components/requestBodies/User"
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/user/conversation/all" : {
      "get" : {
        "tags" : [ "Conversation" ],
        "summary" : "Get all conversations",
        "description" : "Multiple status values can be provided with comma separated strings",
        "operationId" : "getAllConversations",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Conversation"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Conversation"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/user/conversation" : {
      "get" : {
        "tags" : [ "Conversation" ],
        "summary" : "Get conversations of authenticated user",
        "description" : "Returns all conversations that belongs to authenticated user",
        "operationId" : "getUserConversation",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Conversation"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Conversation"
                }
              }
            }
          },
          "404" : {
            "description" : "Conversation not found"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Conversation" ],
        "summary" : "Create new conversation",
        "operationId" : "createConversation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Conversation"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Conversation"
                }
              }
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "user/conversation/{conversationId}" : {
      "put" : {
        "tags" : [ "Conversation" ],
        "summary" : "update conversation name and photo",
        "operationId" : "updateConversation",
        "parameters" : [ {
          "name" : "conversationId",
          "in" : "path",
          "description" : "ID of conversation to update",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Conversation"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Conversation"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Conversation" ],
        "summary" : "Deletes a conversation",
        "operationId" : "deleteConversation",
        "parameters" : [ {
          "name" : "conversationId",
          "in" : "path",
          "description" : "Conversation id to delete",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Conversation deleted successfully"
          },
          "404" : {
            "description" : "Conversation not found"
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/user/conversation/{conversationId}/messages" : {
      "get" : {
        "tags" : [ "message" ],
        "summary" : "Returns messages of conversation",
        "description" : "Returns a map of status codes to quantities",
        "operationId" : "getMessages",
        "parameters" : [ {
          "name" : "conversationId",
          "in" : "path",
          "description" : "ID of the conversation",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "integer",
                    "format" : "int32"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "message" ],
        "summary" : "Send Message",
        "operationId" : "sendMessage",
        "parameters" : [ {
          "name" : "conversationId",
          "in" : "path",
          "description" : "ID of the conversation",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Message"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Message"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Message"
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/user/conversation/{conversationId}/attachment" : {
      "get" : {
        "tags" : [ "attachment" ],
        "summary" : "Returns attachments of conversation",
        "description" : "Returns attachments of conversation",
        "operationId" : "getAttachments",
        "parameters" : [ {
          "name" : "conversationId",
          "in" : "path",
          "description" : "ID of the conversation",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Attachment"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Attachment"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/user/conversation/{conversationId}/attachment/{attachmentId}" : {
      "get" : {
        "tags" : [ "attachment" ],
        "summary" : "Download Attachment",
        "operationId" : "downloadAttachment",
        "parameters" : [ {
          "name" : "conversationId",
          "in" : "path",
          "description" : "ID of the conversation",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "attachmentId",
          "in" : "path",
          "description" : "ID of the attachment",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "404" : {
            "description" : "Attachment not found"
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/user/photos" : {
      "get" : {
        "tags" : [ "photo" ],
        "summary" : "Returns user photos",
        "description" : "Returns photos that belongs to logged user",
        "operationId" : "getPhotos",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Photo"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "photo" ],
        "summary" : "Upload photo",
        "operationId" : "uploadPhoto",
        "requestBody" : {
          "description" : "photo uploaded by the user",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Photo"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Photo"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Photo"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Photo"
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/user/photos/{photoId}" : {
      "delete" : {
        "tags" : [ "photo" ],
        "summary" : "Delete photo by ID",
        "description" : "For valid response try integer IDs with positive integer value.\\ \\ Negative or non-integer values will generate API errors",
        "operationId" : "deletePhoto",
        "parameters" : [ {
          "name" : "photoId",
          "in" : "path",
          "description" : "ID of the photo that needs to be deleted",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Photo not found"
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/login" : {
      "post" : {
        "tags" : [ "user" ],
        "summary" : "Log in with existing user",
        "description" : "Log in with existing user",
        "operationId" : "loginUser",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/user/logout" : {
      "get" : {
        "tags" : [ "user" ],
        "summary" : "Logs out current logged in user session",
        "operationId" : "logoutUser",
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/user" : {
      "get" : {
        "tags" : [ "user" ],
        "summary" : "Get all users",
        "operationId" : "getAllUsers",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "user" ],
        "summary" : "Update user",
        "description" : "This can only be done by the logged in user.",
        "operationId" : "updateUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_1"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "A user object",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          },
          "404" : {
            "description" : "User not found"
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "user" ],
        "summary" : "Delete user",
        "description" : "This can only be done by the logged in user.",
        "operationId" : "deleteUser",
        "responses" : {
          "204" : {
            "description" : "User deleted successfully"
          },
          "404" : {
            "description" : "User not found"
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "Attachment" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "message_id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "conversation_id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "attachment" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "Category"
        }
      },
      "Message" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "conversation_id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "sender_id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "message" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "Category"
        }
      },
      "Photo" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "user_id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "photo" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "Order"
        }
      },
      "Conversation" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "custom_name" : {
            "type" : "string"
          },
          "custom_photo" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "Category"
        }
      },
      "User" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "User"
        }
      },
      "body" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string"
          },
          "attachment" : {
            "type" : "string"
          }
        }
      },
      "body_1" : {
        "type" : "object",
        "properties" : {
          "first_name" : {
            "type" : "string"
          },
          "last_name" : {
            "type" : "string"
          }
        }
      }
    },
    "requestBodies" : {
      "User" : {
        "description" : "Create new user object",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/User"
            }
          },
          "application/xml" : {
            "schema" : {
              "$ref" : "#/components/schemas/User"
            }
          }
        },
        "required" : true
      }
    },
    "securitySchemes" : {
      "bearerAuth" : {
        "type" : "http",
        "scheme" : "bearer"
      },
      "api_key" : {
        "type" : "apiKey",
        "name" : "api_key",
        "in" : "header"
      }
    }
  }
}